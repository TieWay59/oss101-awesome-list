1
00:00:03,775 --> 00:00:09,750
大家好，欢迎回来学习开源软件的课程

2
00:00:10,325 --> 00:00:14,950
我们现在将进入课程的后半部分

3
00:00:14,950 --> 00:00:24,225
我们将先研究开源软件和相关创新对软件行业的影响

4
00:00:24,700 --> 00:00:28,100
在我们研究特定的业务模式之前

5
00:00:28,100 --> 00:00:31,025
以及他们如何使开源可持续发展的

6
00:00:31,025 --> 00:00:33,450
以及他们将如何改变软件行业

7
00:00:33,575 --> 00:00:41,100
为了解这些商业模式的含义，我们需要先奠定一些基础

8
00:00:41,150 --> 00:00:45,875
所以我要先讲解一下：软件行业是如何工作的？

9
00:00:45,975 --> 00:00:47,925
什么是软件产品？

10
00:00:47,950 --> 00:00:53,400
以及软件项目，软件平台，生态系统等基础知识

11
00:00:54,525 --> 00:01:01,800
我不需要解释软件是什么，它无处不在

12
00:01:02,125 --> 00:01:09,725
这是过去20-30年的主要的技术事件

13
00:01:09,725 --> 00:01:13,400
软件已经进入了几乎每一个设备

14
00:01:13,400 --> 00:01:18,875
我们使用的设备都越来越精良

15
00:01:18,875 --> 00:01:25,575
从原来的台式工作站到移动手机到嵌入式设备转向

16
00:01:25,575 --> 00:01:31,050
无论我们正在处理的技术是什么

17
00:01:31,325 --> 00:01:37,450
这是这个行业的代价

18
00:01:37,450 --> 00:01:38,825
我们会看到的

19
00:01:38,825 --> 00:01:41,250
大约50年前的情况并非如此

20
00:01:41,250 --> 00:01:48,050
但今天的软件行业已经成为主流行业

21
00:01:48,275 --> 00:01:56,000
在2016年的数据价值为1.3万亿的总市值

22
00:01:56,000 --> 00:02:04,300
但是当我最近查看同一个查询时，得到了一个市值总额，大概是1.8万亿美元

23
00:02:04,300 --> 00:02:08,300
无论如何，这些数字是否精确，并不重要

24
00:02:08,300 --> 00:02:17,150
它是一个非常非常大的行业，因此影响力不同凡响

25
00:02:17,325 --> 00:02:21,650
从事这方面的事业和干这个行业是一件好事

26
00:02:21,725 --> 00:02:24,150
因为它正在不断的飞跃

27
00:02:24,250 --> 00:02:27,875
而且是一个找工作的好地方

28
00:02:28,900 --> 00:02:37,300
就比如说一个叫马克·安德烈翁的硅谷人才

29
00:02:37,375 --> 00:02:40,475
他是马赛克的原始开发者之一

30
00:02:40,475 --> 00:02:44,350
也是最早的互联网浏览器的开发者，同时也是一个风险投资家

31
00:02:44,350 --> 00:02:50,700
他发表了声明，提到了他在一篇文章中所说的内容

32
00:02:50,750 --> 00:02:53,825
他正在接受《华尔街日报》的采访

33
00:02:53,900 --> 00:02:56,425
软件现在正在吞噬这个世界

34
00:02:56,575 --> 00:02:58,725
准备好被争论

35
00:02:58,725 --> 00:03:02,650
实际上或完整的意思是

36
00:03:02,650 --> 00:03:06,300
我认为他的观点主要是

37
00:03:06,300 --> 00:03:08,100
软件无处不在意味着

38
00:03:08,125 --> 00:03:14,400
没有高科技产品能脱离软件的服务

39
00:03:14,700 --> 00:03:17,725
但我更倾向于

40
00:03:17,725 --> 00:03:25,850
没有软件就不会有创新，也没有如此高速的创新

41
00:03:26,000 --> 00:03:29,025
当然，还有其他的行业

42
00:03:29,025 --> 00:03:31,325
其他类型的产品

43
00:03:31,325 --> 00:03:36,350
农业和其他的行业都是硬件主导的

44
00:03:36,350 --> 00:03:38,600
创新肯定还在进行中

45
00:03:38,600 --> 00:03:44,625
但是因为软件的独特特性，它是可塑的

46
00:03:44,825 --> 00:03:48,325
它可以快速、轻易地更改

47
00:03:48,425 --> 00:03:57,775
软件领导的创新速度比任何硬件都高出一个数量级

48
00:03:57,775 --> 00:04:00,175
所以如果我们看看我们的硬件

49
00:04:00,175 --> 00:04:01,400
我们的同事们

50
00:04:01,400 --> 00:04:07,300
他们的创新速度仍然是一个月

51
00:04:07,300 --> 00:04:14,325
除非他们有一个新产品进入市场，他们才可以在一个月内或几周内完成

52
00:04:14,325 --> 00:04:16,700
但软件的延展性非常强

53
00:04:16,700 --> 00:04:20,825
可以给定一个适当的连续交付工作线

54
00:04:21,150 --> 00:04:24,300
完成一次创新意味着

55
00:04:24,300 --> 00:04:30,350
一些有人在几分钟内开发出高效使用的代码

56
00:04:30,625 --> 00:04:34,400
我们谈论的是加快了一个数量级的创新

57
00:04:34,400 --> 00:04:41,525
正因为如此，为了利用这个速度，公司正在重新设计他们的产品

58
00:04:41,600 --> 00:04:48,125
以便他们有尽可能多的软件创新

59
00:04:48,125 --> 00:04:51,450
这样他们就可以以连续交付的速度

60
00:04:51,450 --> 00:04:57,775
使硬件或非软件组件商品化

61
00:04:58,025 --> 00:05:02,800
这样，他们就可以获得创新速度和软件速度的好处

62
00:05:02,975 --> 00:05:08,825
尽可能少地依赖于那些对软件没有赋能的东西

63
00:05:08,950 --> 00:05:14,250
那些成功地商品化并将创新转化为软件的人

64
00:05:14,300 --> 00:05:18,850
将能够获得这些速度，并将在市场上上市

65
00:05:18,850 --> 00:05:19,825
任何状况之下

66
00:05:19,825 --> 00:05:22,550
正如我们在本课程开始时已经说过的那样

67
00:05:22,550 --> 00:05:27,325
有些人认为，正在吞噬这个世界的不仅仅是软件

68
00:05:27,325 --> 00:05:32,250
但具体来说，是开源的软件正在吞噬世界

69
00:05:32,250 --> 00:05:42,300
开源软件初创企业对风险投资的增长可以证明这一点

70
00:05:42,600 --> 00:05:45,325
这些数字都不合适

71
00:05:45,325 --> 00:05:49,950
在软件行业中是否真的有如此巨大的影响还有待观察

72
00:05:49,950 --> 00:05:54,500
但当我们看到开源领域的飞跃时

73
00:05:54,500 --> 00:06:01,150
正如我们将在本讲座的商业模式讨论中看到的

74
00:06:01,150 --> 00:06:08,675
开源在定义非常明确的企业类型和相关模型上有一个曲线

75
00:06:08,675 --> 00:06:14,225
这些模型可以大获全胜，然后对软件行业产生重大影响

76
00:06:14,875 --> 00:06:18,125
所以软件行业是一个高度国际化的

77
00:06:18,125 --> 00:06:22,800
高度集中的行业，具有很强的网络效应

78
00:06:22,800 --> 00:06:26,250
这么经常，我们会在一些幻灯片中看到为什么

79
00:06:26,250 --> 00:06:28,575
赢家获得一切

80
00:06:28,575 --> 00:06:32,250
所以软件创造了一个赢家的市场

81
00:06:32,450 --> 00:06:35,275
正如我已经说过的 

82
00:06:35,275 --> 00:06:37,525
创新如此快速

83
00:06:37,525 --> 00:06:43,775
是因为从原发明中需要的很少

84
00:06:43,775 --> 00:06:50,700
一些程序代码，让它在客户那里完成工作

85
00:06:50,700 --> 00:06:53,325
现在你可以再考虑一下了

86
00:06:53,325 --> 00:06:55,700
并不是所有的东西都在云中

87
00:06:55,700 --> 00:06:57,650
那么嵌入式设备呢

88
00:06:57,650 --> 00:07:00,400
我可以很容易想到

89
00:07:00,400 --> 00:07:07,075
是的，嵌入式设备以某种方式被云服务和扩展了

90
00:07:07,225 --> 00:07:13,650
这也是正在进行的数字化的一部分

91
00:07:13,650 --> 00:07:22,500
但是正在进行的数字化意味着越来越多的领域域正在被覆盖

92
00:07:22,525 --> 00:07:29,700
正在被软件接管，作为一个附加的虚拟层

93
00:07:29,700 --> 00:07:37,500
基本上正将许多创新领域纯粹地转向软件，转向虚拟世界

94
00:07:37,500 --> 00:07:37,625
那么它们就不受任何物理设备和任何物理依赖关系的阻碍了

95
00:07:37,625 --> 00:07:43,125
那么它们就不受任何物理设备和任何物理依赖关系的阻碍了

96
00:07:43,125 --> 00:07:47,075
并能达到人类发明的全速

97
00:07:48,200 --> 00:07:52,725
以杰弗里举个个例子

98
00:07:52,725 --> 00:07:57,325
杰弗里·伊梅尔特，通用电气公司的首席执行官

99
00:07:57,425 --> 00:08:04,400
他在一个大规模的广告中公开露面

100
00:08:04,400 --> 00:08:11,225
他说，通用电气现在是数字软件公司，这完全是异端

101
00:08:11,225 --> 00:08:19,850
很多人都知道通用电气公司（GE）的历史，因为它生产了很多物理设备

102
00:08:20,075 --> 00:08:27,600
所以他们的意思是，没有通用电气的产品不使用软件

103
00:08:28,075 --> 00:08:33,294
所以有人为通用电气公司发声

104
00:08:33,325 --> 00:08:36,975
他们在与西门子处于相同水平的竞争环境

105
00:08:37,025 --> 00:08:41,000
现在真的是一家软件公司

106
00:08:41,000 --> 00:08:42,950
这又有点滑稽了

107
00:08:42,950 --> 00:08:48,375
关键是要获得员工和大众的支持

108
00:08:48,375 --> 00:08:53,800
如果你不能利用这种创新的速度，那么创新就仅仅是一个软件

109
00:08:53,800 --> 00:08:55,000
这对你不利了

110
00:08:55,000 --> 00:08:57,300
你会在市场上输的

111
00:08:57,300 --> 00:09:00,925
所以让我们来谈谈软件行业

112
00:09:00,925 --> 00:09:07,150
软件行业的主要参与者是软件供应商公司

113
00:09:07,150 --> 00:09:12,850
他们生产产品、软件产品以及咨询公司

114
00:09:12,850 --> 00:09:17,375
他们的项目需要与客户交互

115
00:09:17,550 --> 00:09:21,050
不同之处是，产品被卖给了一个市场

116
00:09:21,050 --> 00:09:28,075
所以没有单一的客户端，而项目总是特定于客户端的

117
00:09:28,075 --> 00:09:32,525
所以这就是一个定义良好的客户端主体

118
00:09:32,525 --> 00:09:36,650
正在为它开发特定的解决方案

119
00:09:36,650 --> 00:09:40,900
还有监管机构和其他一些参与者

120
00:09:41,525 --> 00:09:47,350
但作为主要的神器，它显然是围绕着软件

121
00:09:47,350 --> 00:09:50,475
否则，它就不会被称为软件行业了

122
00:09:50,475 --> 00:09:53,050
所以软件是一种数字产品

123
00:09:53,150 --> 00:09:56,350
所以作为一种商品，它满足了一些人类的需求

124
00:09:56,350 --> 00:09:57,625
这就是为什么我们会关心它

125
00:09:57,750 --> 00:10:01,275
它有一些独特的特性

126
00:10:01,275 --> 00:10:03,450
作为数字产品

127
00:10:03,450 --> 00:10:09,150
它的复制成本非常低

128
00:10:09,150 --> 00:10:12,550
这是数字的，你可以用最小的努力复制它

129
00:10:12,675 --> 00:10:17,875
并且完美的复制也是可能的，不会失去质量

130
00:10:17,875 --> 00:10:19,450
当然，当你复制它时

131
00:10:19,450 --> 00:10:28,400
他们一直试图增加成本，避免完美的商业目的复制

132
00:10:28,425 --> 00:10:30,325
这些都不是我们在说的那样

133
00:10:30,325 --> 00:10:34,150
通常，普通的数字商品可以很容易地复制

134
00:10:34,150 --> 00:10:37,550
审查和复制的成本非常低

135
00:10:37,550 --> 00:10:40,625
和尽可能完美地复制

136
00:10:42,525 --> 00:10:44,250
与之相比之下

137
00:10:44,250 --> 00:10:49,325
获得第一个副本意味着数字商品的创造

138
00:10:49,325 --> 00:10:52,700
如果是软件，成本会很高

139
00:10:52,700 --> 00:10:57,725
软件需要程序员，而且通常还需要进行大量的编程工作

140
00:10:57,725 --> 00:11:01,800
所以劳动力成本通常都很高

141
00:11:01,925 --> 00:11:04,419
所以我说它很高

142
00:11:04,475 --> 00:11:05,550
当然，可能会更高

143
00:11:05,550 --> 00:11:09,325
因为劳动力成本是最高的成本

144
00:11:09,550 --> 00:11:14,300
虽然有时资本投资，机器会贵很多

145
00:11:14,350 --> 00:11:17,950
但劳动力成本是最大的影响因素

146
00:11:18,000 --> 00:11:21,175
如果你有数百员工工作多年

147
00:11:21,175 --> 00:11:23,050
花费不断累加

148
00:11:23,050 --> 00:11:25,675
你就需要付出巨大的成本

149
00:11:25,675 --> 00:11:30,300
你必须主动发起，以得到一个软件的第一个版本

150
00:11:30,300 --> 00:11:35,475
一旦你有了第一个版本，复制是便宜的

151
00:11:35,475 --> 00:11:38,300
前提是需要得到第一个版本

152
00:11:38,575 --> 00:11:42,475
一旦你将客户锁定到你的软件中

153
00:11:42,475 --> 00:11:44,325
交换机的成本很高

154
00:11:44,350 --> 00:11:51,550
因为软件与业务流程相互交织

155
00:11:51,550 --> 00:11:54,800
通常真的很难摆脱它

156
00:11:55,375 --> 00:12:02,025
不同类型的软件产品或数字产品

157
00:12:02,025 --> 00:12:05,200
例如，消费者的软件游戏

158
00:12:05,225 --> 00:12:11,050
你可能是学生或者软件的专用用户

159
00:12:11,050 --> 00:12:16,375
但这也是企业软件软件对企业排序

160
00:12:16,375 --> 00:12:19,125
但针对特定目标的

161
00:12:19,825 --> 00:12:21,800
软件是数据产品

162
00:12:21,800 --> 00:12:27,900
但它扮演了软件供应商产品的角色

163
00:12:27,900 --> 00:12:32,850
作为一种产品，它是一个人造的好软件

164
00:12:32,850 --> 00:12:38,350
市场上的客户或消费者

165
00:12:38,375 --> 00:12:41,225
消费软件或企业软件

166
00:12:41,225 --> 00:12:45,650
可能是不同市场的两种主要类别

167
00:12:45,800 --> 00:12:50,450
我们讨论过，软件作为产品具有许可证

168
00:12:50,450 --> 00:12:57,800
许可证基本上是用户合同，通常会添加许多服务

169
00:12:57,850 --> 00:13:00,200
以销售尽可能多的产品

170
00:13:00,200 --> 00:13:06,100
软件作为一个产品，有一个开放的生命周期

171
00:13:06,250 --> 00:13:10,050
所以它诞生于某个时候，这便是第一个副本

172
00:13:10,050 --> 00:13:13,200
但它可能会永远存在

173
00:13:13,300 --> 00:13:17,625
通常它最终会死亡，但你不知道是什么时候

174
00:13:17,625 --> 00:13:20,175
它有一个开放式的生命周期

175
00:13:20,175 --> 00:13:21,325
寿命将会延长

176
00:13:21,325 --> 00:13:24,475
会和他们的客户一样长

177
00:13:24,625 --> 00:13:28,750
原因是它可能会被撤销和重新制作

178
00:13:28,750 --> 00:13:35,200
直到在最初版本中的代码已不复存在

179
00:13:35,325 --> 00:13:36,700
但这没有关系

180
00:13:36,700 --> 00:13:39,075
只要它是能卖出来的话就行了

181
00:13:39,075 --> 00:13:40,500
这样也还不错

182
00:13:40,925 --> 00:13:44,250
要再次得到第一个副本

183
00:13:44,250 --> 00:13:50,625
重要的前期工作，投资，发展，劳动力都是必要的

184
00:13:50,625 --> 00:13:55,175
所以，而软件产品才是我们在这里最关心的东西

185
00:13:55,175 --> 00:13:57,650
因为这是软件行业的基础

186
00:13:57,850 --> 00:14:01,000
所以让我们更详细地看看什么是软件产品

187
00:14:01,025 --> 00:14:05,050
以及市场上卖给客户的东西

188
00:14:05,700 --> 00:14:09,550
我把它分成三级的产品

189
00:14:09,625 --> 00:14:15,075
有我所说的核心产品，或者其他人所说的核心产品

190
00:14:15,075 --> 00:14:18,800
这是软件的核心

191
00:14:18,800 --> 00:14:21,300
这是原来的程序代码

192
00:14:21,300 --> 00:14:25,675
但这本身通常对客户并没有用

193
00:14:25,700 --> 00:14:27,900
我们的客户想要的则更多

194
00:14:27,975 --> 00:14:30,425
这就是基本产品

195
00:14:30,425 --> 00:14:38,700
它是一套原始的核心软件

196
00:14:38,700 --> 00:14:46,425
比如用户手册或操作手册和自助服务

197
00:14:46,600 --> 00:14:50,600
比如论坛和邮件列表或在网上使用的FX

198
00:14:50,600 --> 00:14:55,800
这样用户在有问题或问题时就可以自助

199
00:14:56,225 --> 00:15:01,350
通常是你支付的许可证

200
00:15:01,350 --> 00:15:08,100
为了能够使用该软件，并获得一些保障

201
00:15:08,100 --> 00:15:10,625
否则你就不会买它了

202
00:15:10,625 --> 00:15:13,425
所以有一些合适使用的保证

203
00:15:14,000 --> 00:15:19,750
通常，供应商会尽量保持它尽可能小

204
00:15:19,800 --> 00:15:21,850
但必须有一些合适使用的保证

205
00:15:21,850 --> 00:15:24,600
否则，购买就没有意义了

206
00:15:24,650 --> 00:15:31,225
通常还有保修和赔偿

207
00:15:31,225 --> 00:15:35,575
意思是如果有了问题或造成了使用损坏

208
00:15:35,575 --> 00:15:38,500
这显然是最软的故障

209
00:15:38,500 --> 00:15:43,675
作为客户，您可以让供应商承担法律责任

210
00:15:43,675 --> 00:15:47,300
还有各种各样的支持服务

211
00:15:47,300 --> 00:15:49,075
例如，热线

212
00:15:49,075 --> 00:15:51,675
显然，使用热线

213
00:15:51,675 --> 00:15:57,700
如果SAP自助服务不够，您可以与软件专家交谈

214
00:15:57,850 --> 00:16:00,175
所以这是最基本的产品

215
00:16:00,175 --> 00:16:05,775
这通常足够进入市场

216
00:16:05,775 --> 00:16:09,000
然而，这却超出了基本的产品范围

217
00:16:09,000 --> 00:16:11,050
你通常想要整个产品

218
00:16:11,050 --> 00:16:17,375
这是基本产品吸引客户的根本原因

219
00:16:17,600 --> 00:16:21,200
所以整个产品就是基本产品的升级版

220
00:16:21,200 --> 00:16:27,500
为用户提供围绕该产品的咨询服务

221
00:16:27,500 --> 00:16:33,000
通常用于用户为中心的定制化和实现产品

222
00:16:33,000 --> 00:16:36,775
一个数据中心和一个操作中心

223
00:16:36,775 --> 00:16:40,475
或者你可以提供为客户操作软件

224
00:16:40,475 --> 00:16:47,775
以防客户没有数据中心，只是想为客户提供租赁服务

225
00:16:48,050 --> 00:16:53,425
您可以在我们的软件产品管理课程中了解更多关于这些方面的信息

226
00:16:53,425 --> 00:16:59,500
所以我在这张幻灯片中总结了软件产品的要点

227
00:16:59,500 --> 00:17:06,436
将整个产品分层架构为

228
00:17:06,700 --> 00:17:10,000
基本产品和附加服务

229
00:17:10,075 --> 00:17:17,300
比如培训、咨询操作和基本产品都是用户的权利

230
00:17:17,300 --> 00:17:21,750
这些保证了你更进一步的使用

231
00:17:21,750 --> 00:17:27,650
以及可能卖给客户的支持服务

232
00:17:27,650 --> 00:17:31,750
这真的相当详细

233
00:17:31,750 --> 00:17:35,525
因为他们还增加了价格

234
00:17:35,525 --> 00:17:40,325
因为价格与你可以卖的东西密切相关

235
00:17:40,325 --> 00:17:45,250
你不想卖没有价值的东西

236
00:17:45,300 --> 00:17:48,400
所以你需要考虑如何尝试一些东西

237
00:17:48,400 --> 00:17:54,925
并根据客户可能想要购买的不同方面制定一个定价表

238
00:17:54,925 --> 00:17:57,125
所以再来看看今年

239
00:17:57,125 --> 00:18:05,150
软件的成本确实是软件的核心，可能是通过扩展和插件

240
00:18:05,150 --> 00:18:07,450
你可以放大或缩小这个比例

241
00:18:07,525 --> 00:18:14,675
提供或多或少的插件捆绑，或多或少的插件到不同版本的软件

242
00:18:15,025 --> 00:18:24,950
作为软件文档和培训的一部分提供的免费材料

243
00:18:24,950 --> 00:18:28,850
所以你有权使用这些材料

244
00:18:28,850 --> 00:18:32,600
为了你自己的客户利益

245
00:18:32,600 --> 00:18:36,625
它只有使用它们的权利，它还不是服务

246
00:18:36,625 --> 00:18:41,450
还有其他你可以向用户收费的自助服务

247
00:18:41,450 --> 00:18:44,925
例如，可以访问表单和邮件列表

248
00:18:44,925 --> 00:18:50,400
例如，可以访问表单和邮件列表

249
00:18:50,400 --> 00:18:54,275
但有时开发人员网络

250
00:18:54,275 --> 00:19:00,475
基本上我有一个有围墙的花园，你花钱买优质材料

251
00:19:00,475 --> 00:19:02,750
这些东西在它们下面是不能免费获得的

252
00:19:02,775 --> 00:19:04,150
所以需要自助

253
00:19:04,150 --> 00:19:06,100
所以没有人在帮助你

254
00:19:06,100 --> 00:19:09,500
这只是提供给客户的材料

255
00:19:11,325 --> 00:19:21,150
这个基本产品或基本产品的定价

256
00:19:21,150 --> 00:19:24,300
有多个维度

257
00:19:24,300 --> 00:19:28,975
所以首先是你要看的使用范围

258
00:19:28,975 --> 00:19:34,400
所以你可以按用户的数量或机器的数量来收费

259
00:19:34,400 --> 00:19:39,525
该软件一直被部署在一个内部部署的解决方案

260
00:19:39,525 --> 00:19:42,350
正在消耗的所有资源

261
00:19:42,350 --> 00:19:46,475
你也可以出售不同的持续时间

262
00:19:46,550 --> 00:19:51,875
所以这些给到用户的权限可能只有一年或一个月

263
00:19:51,875 --> 00:19:53,775
也可能是永久的

264
00:19:53,875 --> 00:19:58,625
这取决于你可以提供所有优惠

265
00:19:58,700 --> 00:20:01,475
客户会根据自己的需要进行选择

266
00:20:01,925 --> 00:20:09,500
例如，如果您提供的软件作为他人产品的库

267
00:20:09,500 --> 00:20:12,800
他们肯定会想永久性地使用它的权利

268
00:20:12,800 --> 00:20:19,650
而如果他们是买家，那么客户就是最终的用户

269
00:20:19,650 --> 00:20:23,025
它们可能是一个时间有限的版本

270
00:20:23,025 --> 00:20:26,925
比如说在软件服务的订阅服务中

271
00:20:27,625 --> 00:20:32,725
您可以进一步将这些支付细分为

272
00:20:32,725 --> 00:20:35,600
初始许可费和定期维护费

273
00:20:35,600 --> 00:20:41,050
这实际上是一种最基本的策略定价软件策略

274
00:20:41,050 --> 00:20:47,075
你对该软件的初始许可证的预付费用

275
00:20:47,075 --> 00:20:52,500
在那之后，你会把价格大大降低到所谓的维护费上

276
00:20:53,675 --> 00:20:59,000
作为基本产品的一部分，这些都是基本的用户权利

277
00:20:59,125 --> 00:21:06,100
你可能会出售保证，这再次是适合使用或赔偿

278
00:21:06,250 --> 00:21:09,825
也经常出售认证

279
00:21:09,825 --> 00:21:12,725
表示供应商

280
00:21:14,400 --> 00:21:15,875
祝福我自己

281
00:21:16,300 --> 00:21:20,650
供应商需要付出额外努力

282
00:21:20,650 --> 00:21:26,950
使其软件获得某些硬件的认证或遵守某些法律

283
00:21:27,025 --> 00:21:31,000
只有这样才能使软件实际上可以购买

284
00:21:31,000 --> 00:21:33,650
或允许被一些客户购买

285
00:21:33,675 --> 00:21:35,450
如果你没有该证书

286
00:21:35,500 --> 00:21:39,000
他们可能无法根据他们自己的规则

287
00:21:39,000 --> 00:21:44,000
或基于某个特定国家的损失来购买

288
00:21:44,300 --> 00:21:49,350
所以这些担保的价格会有所不同

289
00:21:49,350 --> 00:21:54,150
或者也会特定于这种类型的产品特性

290
00:21:54,150 --> 00:21:56,750
而且经常会这样做

291
00:21:56,750 --> 00:22:02,850
例如，如果它不适合使用，则可能发生的业务损失

292
00:22:03,100 --> 00:22:08,925
如果有问题，所有的罚款都必须传递给供应商

293
00:22:08,950 --> 00:22:12,525
例如，软件使用模式

294
00:22:12,525 --> 00:22:18,450
而供应商没有适当地再授权这些模式的权利

295
00:22:18,450 --> 00:22:20,950
现在专利权人起诉了客户

296
00:22:20,950 --> 00:22:23,275
然后通过赔偿的方式

297
00:22:23,275 --> 00:22:32,600
客户将把这些轻微的损害诉讼移交给软件供应商

298
00:22:33,225 --> 00:22:35,825
你可以把它分为两个不同的段

299
00:22:35,825 --> 00:22:47,375
这取决于供应商向其用户提供的保证的重要性或严重程度

300
00:22:47,775 --> 00:22:51,225
所以警察主要是上行支持

301
00:22:51,225 --> 00:22:55,825
也许还有一些额外的现场服务

302
00:22:56,525 --> 00:23:00,300
你会根据各种型号来定价

303
00:23:00,400 --> 00:23:02,800
例如，热线可以是基于突发事件的

304
00:23:02,800 --> 00:23:07,400
每次有人打电话，并在你打电话的时候收取费用

305
00:23:07,400 --> 00:23:12,150
你有公司的保留金，这意味着提供9-5

306
00:23:12,150 --> 00:23:14,900
这意味着每周有5天工作9个小时

307
00:23:14,900 --> 00:23:21,175
或者24-7，这意味着一周的7天，每天24小时

308
00:23:21,475 --> 00:23:27,850
当然，这将根据你需要的支持水平而导致不同的价格

309
00:23:28,175 --> 00:23:33,350
那么，获得一级的支持通常是

310
00:23:33,350 --> 00:23:39,050
那些通常只能读手册的人

311
00:23:39,050 --> 00:23:45,325
第二级实际上可能是对经验丰富的产品的专家商店

312
00:23:45,350 --> 00:23:48,100
第三级可能是开发人员自己

313
00:23:48,200 --> 00:23:53,025
他们会和你一起调查一个你可能遇到的潜在文档

314
00:23:53,125 --> 00:23:56,100
所以这是最基本的产品

315
00:23:56,100 --> 00:23:57,725
除了基本产品之外

316
00:23:57,725 --> 00:24:05,025
现在还有一些使产品真正有用的附加服务

317
00:24:05,025 --> 00:24:08,650
那就是培训和咨询业务

318
00:24:08,650 --> 00:24:15,725
培训可以是内部培训或在线或场外培训

319
00:24:15,825 --> 00:24:19,850
你可能只需收取固定的费用

320
00:24:19,850 --> 00:24:21,900
参与的费用

321
00:24:21,900 --> 00:24:25,700
有很多可能的变化

322
00:24:25,875 --> 00:24:32,075
大多数向市场提供软件产品的公司都有一些培训部门

323
00:24:33,550 --> 00:24:37,175
他们有时也有一个咨询部门

324
00:24:37,175 --> 00:24:40,875
但如果它是一个著名的产品

325
00:24:40,875 --> 00:24:45,925
一个大型客户的咨询可以交由另一家公司做

326
00:24:45,925 --> 00:24:49,325
看，我说过情况是这样的

327
00:24:49,475 --> 00:24:53,300
所以咨询将是技术实现服务

328
00:24:53,300 --> 00:25:02,575
将有时可能非常复杂的产品在客户网站的公司投入生产

329
00:25:02,725 --> 00:25:07,075
有时是它的战略性的，额外的发展

330
00:25:07,075 --> 00:25:10,175
而不仅仅是配置自定义化的实现

331
00:25:10,200 --> 00:25:14,225
但有时它的额外开发的目的是

332
00:25:14,225 --> 00:25:18,050
在软件中添加一些还没有的东西

333
00:25:18,050 --> 00:25:23,125
但这使得它对客户特别有用

334
00:25:23,125 --> 00:25:30,750
为客户在自己的领域创造一些预期的优势和市场

335
00:25:30,750 --> 00:25:34,475
无论是什么，可能是金融服务或者其他

336
00:25:35,625 --> 00:25:37,050
此处的定价

337
00:25:37,050 --> 00:25:43,675
这通常是一个固定的费用，合同费或人工或时间和材料的费用

338
00:25:43,675 --> 00:25:50,300
所以所有这些都是咨询公司定价机制的用户机制

339
00:25:50,650 --> 00:25:56,125
最后，供应商可以为客户操作该软件

340
00:25:56,125 --> 00:26:01,500
所以SAS基本上是作为一种托管服务来提供的

341
00:26:01,575 --> 00:26:07,100
这里的价格让人想起了基本的软件

342
00:26:07,100 --> 00:26:09,350
所以按用户数量计算的价格

343
00:26:09,625 --> 00:26:14,025
资源被计算密集型的使用时间

344
00:26:14,025 --> 00:26:23,400
然而如果总是限时的，这通常不会永恒

345
00:26:23,475 --> 00:26:26,400
基本上是知名的订阅

346
00:26:26,575 --> 00:26:37,850
所以2012年有一个特定的公司的例子——Jasper soft

347
00:26:37,850 --> 00:26:45,550
它现在收购典型提供商业智能软件

348
00:26:45,550 --> 00:26:54,600
所以，报告生成器和报告编辑器来引导或管理报告的生成

349
00:26:55,475 --> 00:27:00,675
所以他们的产品正如你可以在这个图标和这个模式中看到的

350
00:27:00,775 --> 00:27:04,625
是通过两个主要渠道销售的

351
00:27:04,650 --> 00:27:13,950
有一家网络商店提供一些产品特性，直销队伍，高级销售队伍

352
00:27:13,950 --> 00:27:22,950
这意味着那些来到客户网站并与客户进行交流的人，很有希望在最后达成交易

353
00:27:22,950 --> 00:27:26,750
所以现在卖的东西是不同的

354
00:27:26,750 --> 00:27:36,925
所以这里的主要销售渠道是直销，它向企业客户销售软件许可证

355
00:27:37,175 --> 00:27:45,000
所以我在这里看到了使用商业智能软件的实际商业许可证

356
00:27:45,225 --> 00:27:47,075
然后有一个更新服务

357
00:27:47,075 --> 00:27:52,525
所以还有访问更新、升级和错误修复需要的维护费用

358
00:27:52,700 --> 00:27:55,200
还有额外的公用事业设施被出售

359
00:27:55,200 --> 00:27:55,550
还有可提供各级的热线支持的文档和培训

360
00:27:55,550 --> 00:28:01,500
还有可提供各级的热线支持的文档和培训

361
00:28:01,500 --> 00:28:06,000
通常这是作为一个价格点

362
00:28:06,050 --> 00:28:10,125
即使价格点是使用这些不同的特性计算的

363
00:28:10,125 --> 00:28:14,575
捆绑它们，将它们组合成一个价格点

364
00:28:15,525 --> 00:28:19,950
所以这就是对企业客户的直接销售

365
00:28:20,200 --> 00:28:27,275
现在，如果是这样的话，商业智能通常会作为库

366
00:28:27,275 --> 00:28:29,975
嵌入到其他更复杂的产品中

367
00:28:30,025 --> 00:28:36,675
例如，软件系统或商业智能只是软件的一个方面

368
00:28:36,675 --> 00:28:41,125
所以仅次于企业客户作为最终用户

369
00:28:41,650 --> 00:28:47,075
有ISVs和制造商

370
00:28:47,075 --> 00:28:54,475
基本上是在基于商业智能打造产品，如贾斯珀的

371
00:28:54,750 --> 00:28:57,000
所以这些需要一个许可证

372
00:28:57,000 --> 00:28:59,725
但我真的不需要一个更新服务

373
00:28:59,725 --> 00:29:06,350
至少不是他们放到自己产品中的图书馆软件的永久许可证

374
00:29:06,550 --> 00:29:12,200
但我确实需要实用工具文档培训和热线支持

375
00:29:13,025 --> 00:29:17,850
所以这些是商业客户贾斯珀的有趣的

376
00:29:17,850 --> 00:29:21,125
我们将在稍后的讲座中回顾这个

377
00:29:21,125 --> 00:29:22,375
贾斯珀很有趣

378
00:29:22,375 --> 00:29:32,150
因为它还允许用户下载一个免费的和开源版本的软件

379
00:29:32,225 --> 00:29:36,250
通常是开源软件版本的用户

380
00:29:36,325 --> 00:29:42,625
商业开源公司或信号供应商开源公司

381
00:29:42,975 --> 00:29:52,950
他们通常没有出售给使用基本开源版本的服务或产品

382
00:29:52,950 --> 00:29:58,650
至少是…另一个供应商开源

383
00:29:58,950 --> 00:30:02,250
贾斯珀决定

384
00:30:02,275 --> 00:30:08,975
为了使它免费加载免费和开源软件用户高兴

385
00:30:09,250 --> 00:30:14,375
他们需要提供一些文档和基于突发事件的支持

386
00:30:14,375 --> 00:30:15,850
和额外的工具

387
00:30:15,850 --> 00:30:20,400
罗纳德·福斯想提供销售

388
00:30:20,550 --> 00:30:26,700
他们不是通过高科技，不是通过高影响力的销售力量

389
00:30:26,700 --> 00:30:29,675
而是通过自助服务或网络商店

390
00:30:29,775 --> 00:30:38,675
因此，这里到开源社区的销售渠道是一个网络商店

391
00:30:38,725 --> 00:30:40,500
客户可以在那里购买，或者至少在2010年能够购买

392
00:30:40,550 --> 00:30:45,575
基于突发事件的支持和免费运行的文档材料

393
00:30:45,750 --> 00:30:53,075
这样的话，开源用户并不是真正的客户

394
00:30:53,075 --> 00:30:58,575
可能成为一个低重要性，的低价值客户

395
00:30:58,575 --> 00:31:01,825
我会再次回顾这个

396
00:31:01,850 --> 00:31:05,925
杰斯珀这样做是为了创造一个上升销售的路径

397
00:31:06,050 --> 00:31:12,325
通常，如果有人愿意为文档或基于事件的支持服务付费

398
00:31:12,325 --> 00:31:17,125
那么他们就不是一些漏洞用户，但可能是一家公司

399
00:31:17,125 --> 00:31:25,050
这可能是供应商发送给他们的信号，让他们在这些人之后说这是假的

400
00:31:25,700 --> 00:31:27,125
好的

401
00:31:27,200 --> 00:31:35,325
所以这实际上是——您是什么类型的客户或用户——的一个重要区别

402
00:31:35,325 --> 00:31:41,150
当然，还有企业的客户，他们也是这里没有展示的消费者

403
00:31:41,225 --> 00:31:43,925
但也有私人用户意味着

404
00:31:43,925 --> 00:31:49,300
如果它是一个开源产品，私人用户会免费使用它

405
00:31:49,375 --> 00:31:51,925
因为这是开源的思想

406
00:31:52,200 --> 00:32:00,800
而且他们愿意用时间而不是金钱来解决问题

407
00:32:00,800 --> 00:32:06,000
所以他们会到处搜索网络信息来解决软件的问题

408
00:32:06,000 --> 00:32:08,625
而不是支付热线访问的费用

409
00:32:09,275 --> 00:32:17,425
好吧，所以开源软件回到正题

410
00:32:17,525 --> 00:32:23,625
软件行业可以按照软件产品的这些路线来构建

411
00:32:23,925 --> 00:32:27,425
那些正在由软件供应商卖给市场的产品

412
00:32:27,750 --> 00:32:35,900
然后可能由供应商由服务供应商操作

413
00:32:36,025 --> 00:32:43,475
它们是由咨询公司作为项目一部分的项目

414
00:32:43,575 --> 00:32:45,300
这些东西会放在一起

415
00:32:45,300 --> 00:32:49,000
作为一个由供应商提供的产品开发

416
00:32:49,600 --> 00:32:52,500
产品可以由服务提供商操作

417
00:32:52,500 --> 00:32:56,725
也可以是供应商自己，然后充当服务提供商

418
00:32:56,925 --> 00:32:59,350
为了使它运行良好

419
00:32:59,350 --> 00:33:02,800
一个软件产品通常需要

420
00:33:02,800 --> 00:33:04,925
如果是企业软件产品

421
00:33:04,925 --> 00:33:11,275
则需要根据企业客户的具体需要进行定制和调整

422
00:33:11,525 --> 00:33:17,000
这可以由一个单独的咨询公司通过软件供应商自己来完成

423
00:33:17,000 --> 00:33:20,575
然后通过他们普遍拥有的咨询部门

424
00:33:22,500 --> 00:33:28,975
现在，在这些不同的特性上赚了多少钱

425
00:33:29,000 --> 00:33:33,700
所以我们看了正在出售的不同的东西

426
00:33:33,700 --> 00:33:40,975
但这些不同的方面通常被捆绑在一个客户被收取的价格中

427
00:33:41,675 --> 00:33:49,075
这样便明白，产品和项目是如何相互作用的

428
00:33:49,175 --> 00:33:59,600
所以一个产品会再次卖给客户

429
00:33:59,650 --> 00:34:03,500
各种知识产权捆绑为产品

430
00:34:03,625 --> 00:34:08,650
在历史上，它有这两个组成部分

431
00:34:08,650 --> 00:34:11,050
此外，在显示中

432
00:34:11,050 --> 00:34:21,425
客户在第一次访问该软件的第一年就支付了一次性许可费

433
00:34:21,500 --> 00:34:22,925
在那之后

434
00:34:22,925 --> 00:34:25,700
只要他们继续使用该软件

435
00:34:25,700 --> 00:34:33,100
以保持访问更新和升级服务到热线支持等

436
00:34:33,100 --> 00:34:36,275
就没有每年的维护费

437
00:34:36,275 --> 00:34:38,425
这种关系通常是这样的

438
00:34:38,425 --> 00:34:43,350
维护费大约是原始许可证费的20%

439
00:34:43,400 --> 00:34:45,675
这是一个基本规则

440
00:34:45,675 --> 00:34:49,200
所以你可以看到这个最初的增长

441
00:34:49,325 --> 00:34:51,550
核心销售发生了

442
00:34:51,625 --> 00:35:01,275
只要客户是提供产品的软件供应商的客户，就会有一个稳定的收入流

443
00:35:01,575 --> 00:35:05,525
现在的好处是它在不断增加

444
00:35:05,675 --> 00:35:10,100
因为软件供应商在这里会有一次许可证

445
00:35:10,100 --> 00:35:12,150
但是他们有一个销售团队

446
00:35:12,150 --> 00:35:15,725
他们可能会几次三番地把软件卖给另一个客户

447
00:35:15,725 --> 00:35:16,950
甚至四次，五次

448
00:35:17,200 --> 00:35:23,975
当然，一个有效的销售团队的主要目的是完成一个接一个的交易

449
00:35:23,975 --> 00:35:26,325
创造越来越多的客户

450
00:35:26,325 --> 00:35:29,400
潜在的整个市场已经耗尽

451
00:35:29,400 --> 00:35:31,450
这种情况很少发生

452
00:35:31,775 --> 00:35:40,900
所以，随着越来越多的客户的增加，收入也在不断增加

453
00:35:40,925 --> 00:35:44,500
因为有这个反复性的维护费

454
00:35:44,500 --> 00:35:47,725
看看这里的底线

455
00:35:47,725 --> 00:35:50,700
它是如何逐年堆积的

456
00:35:50,700 --> 00:35:54,900
以及每年有一个新客户的简化例子

457
00:35:54,900 --> 00:36:02,675
你有一个基本的维护收入库存不断积累

458
00:36:03,100 --> 00:36:09,775
使软件公司和软件供应商成为一个软件供应商如此好的业务

459
00:36:09,975 --> 00:36:15,800
即使没有初始的许可费

460
00:36:15,800 --> 00:36:18,300
现在是使用软件作为一种服务

461
00:36:18,300 --> 00:36:24,500
通常你只需支付统一的订阅费，或者你只需支付订阅费

462
00:36:24,500 --> 00:36:30,425
而不用管收费的计算方式如何，按月还是按年

463
00:36:30,425 --> 00:36:32,700
即使是这样

464
00:36:32,700 --> 00:36:41,200
如果公司每年获得一个新客户，它仍然不断增加

465
00:36:41,225 --> 00:36:43,150
你没有最初的好处

466
00:36:43,150 --> 00:36:51,900
但是你每年都有新的额外收入和旧的经常性收入

467
00:36:51,900 --> 00:36:55,400
因此，持续的收入流

468
00:36:55,425 --> 00:37:04,700
不需要像新的开发所需的那么多资源来让现有客户满意

469
00:37:04,700 --> 00:37:06,200
然后会不断增加的

470
00:37:06,200 --> 00:37:12,875
这就是为什么软件是这样一个很好的生意

471
00:37:13,025 --> 00:37:17,400
所以我想和软件产品做个对比

472
00:37:17,450 --> 00:37:21,050
所以首先再后退一步

473
00:37:21,050 --> 00:37:29,450
项目是一个有定义的过程，这是至关重要的

474
00:37:29,475 --> 00:37:32,125
必须有一个结束，否则它不是一个项目

475
00:37:32,125 --> 00:37:35,875
如果它没有结束，如果它是没有限度的，它则不是一个项目

476
00:37:36,225 --> 00:37:38,950
我们项目中的软件项目

477
00:37:39,025 --> 00:37:44,900
有一些是软件通常的开发或调整，并且已经实现

478
00:37:44,975 --> 00:37:49,050
与产品相比

479
00:37:49,375 --> 00:37:57,275
软件项目创造的收入与正在执行的劳动力密切相关

480
00:37:57,275 --> 00:38:05,125
所以客户为定制的项目付费

481
00:38:05,575 --> 00:38:08,850
他们通常会支付劳动力

482
00:38:09,000 --> 00:38:17,125
所以这可能是一个固定的价格或者可能是时间，材料和实际的劳动力

483
00:38:17,125 --> 00:38:18,450
这并不重要

484
00:38:18,450 --> 00:38:25,550
但是，软件项目的价格与投入其中的劳动力密切相关

485
00:38:25,750 --> 00:38:29,300
项目的例子是学生硕士

486
00:38:29,300 --> 00:38:32,025
这些学士

487
00:38:32,025 --> 00:38:38,650
也可以通过正确地使用SIP许可证来调整SIP

488
00:38:38,650 --> 00:38:41,000
以适应特定客户的需求

489
00:38:41,225 --> 00:38:42,675
也许只是进行配置

490
00:38:42,675 --> 00:38:48,550
有时会为客户公司的特定工作流定制开发

491
00:38:48,850 --> 00:38:55,575
在这里我们看到这两种类型的企业之间的主要区别

492
00:38:55,575 --> 00:38:59,525
向左是，向市场销售产品的软件供应商

493
00:38:59,525 --> 00:39:06,575
向右是，与客户一起执行项目的咨询公司

494
00:39:06,925 --> 00:39:11,950
我们可以看到产品收入是如何不断积累的

495
00:39:11,950 --> 00:39:18,500
项目收入是如何逐年保持不变

496
00:39:18,500 --> 00:39:21,675
因为你只有有限的人数

497
00:39:21,675 --> 00:39:25,700
如果他们每年能做一个项目，那就是他们赚的钱

498
00:39:25,800 --> 00:39:27,750
所以你可以看到

499
00:39:27,750 --> 00:39:34,275
最初你在项目设置中赚的钱可能会高于

500
00:39:34,275 --> 00:39:37,325
订阅费或维护费用

501
00:39:37,400 --> 00:39:42,800
甚至是软件产品的初始许可费

502
00:39:43,800 --> 00:39:46,200
随着时间的推移，它不能真正成长

503
00:39:46,200 --> 00:39:51,550
因为你基本上是在重复地租出用旧的主体作为基本的模型

504
00:39:51,550 --> 00:39:53,750
所以在一段时间后

505
00:39:53,950 --> 00:39:57,575
一个公司的软件产品收入将

506
00:39:57,575 --> 00:40:02,400
超过一些咨询的项目收入

507
00:40:02,600 --> 00:40:06,575
当然，咨询公司可以通过雇佣更多的人来成长

508
00:40:06,850 --> 00:40:13,125
但经济增长却受到了他们雇佣称职人才的速度的限制

509
00:40:13,350 --> 00:40:24,875
这通常比软件公司收购客户去使用他们的产品的速度要慢得多

510
00:40:25,600 --> 00:40:28,600
然而，在软件行业中

511
00:40:28,600 --> 00:40:37,975
这两种类型的公司是相互依赖的

512
00:40:38,075 --> 00:40:40,400
因为没有产品

513
00:40:40,400 --> 00:40:47,225
当然就没有在客户网站上实现项目的企业产品

514
00:40:47,500 --> 00:40:53,125
所以，每当有人购买了一些安装友好的企业软件时

515
00:40:53,125 --> 00:41:03,300
他们通常还会在客户数据中心，为实施该软件的项目付费

516
00:41:03,675 --> 00:41:08,425
所以典型的例子是SAP

517
00:41:08,425 --> 00:41:11,775
因为客户购买SAP许可证

518
00:41:11,775 --> 00:41:20,775
然后他们雇佣extension或者TATA等，来在公司里实现这个相当复杂的软件

519
00:41:20,775 --> 00:41:26,525
与实施SAP的成本相比

520
00:41:26,525 --> 00:41:29,500
Sapa的初始许可费用很小

521
00:41:29,500 --> 00:41:30,625
第一年

522
00:41:30,625 --> 00:41:36,825
真正的成本是我们在客户方面实施SAP的咨询和劳动力

523
00:41:36,875 --> 00:41:39,275
但在最简单的情况下

524
00:41:39,325 --> 00:41:42,900
在项目实施后的第一年之后

525
00:41:42,900 --> 00:41:49,350
唯一要支付的是软件许年复一年的可费或维护费用

526
00:41:49,350 --> 00:41:50,675
因此，它不断增加

527
00:41:50,675 --> 00:41:53,000
这意味着一段时间之后

528
00:41:53,000 --> 00:42:01,800
SAP的收入已经超过了咨询公司的收入

529
00:42:02,200 --> 00:42:04,675
当然，现实要更复杂一些

530
00:42:04,675 --> 00:42:07,000
但这些都是基本的机制

531
00:42:07,325 --> 00:42:08,825
不仅仅是SAP

532
00:42:08,825 --> 00:42:13,750
所以Sugar CRM是一个比SAP要小得多的CRM软件

533
00:42:13,750 --> 00:42:18,900
但它已经足够大，大到有一个所谓的生态系统

534
00:42:18,900 --> 00:42:25,900
我们还将把他作为一个实现模式的生态系统进行重新审视

535
00:42:25,900 --> 00:42:32,950
它将使软件定制程序满足客户的需求，并为用户工作

536
00:42:32,950 --> 00:42:35,350
好处是

537
00:42:35,700 --> 00:42:41,250
咨询公司对销售他们的资源有兴趣

538
00:42:41,250 --> 00:42:44,275
人们说，这是在销售劳动力

539
00:42:44,275 --> 00:42:52,100
然后他们也几乎总是在销售原始的软件产品

540
00:42:52,100 --> 00:43:02,725
所以这些软件产品的很多销售都不是由供应商自己来完成的

541
00:43:02,750 --> 00:43:06,250
但通常是由销售服务的咨询公司

542
00:43:06,350 --> 00:43:12,050
如果他们不向底层软件销售许可证，就不可能出售什么

543
00:43:12,150 --> 00:43:15,250
为此，他们正在销售我们的咨询服务

544
00:43:16,375 --> 00:43:23,025
对于较小的软件产品，选择一个本地示例

545
00:43:23,025 --> 00:43:29,050
总部位于纽伦堡的公司Method Park有一个被称为stages的工作流引擎

546
00:43:29,050 --> 00:43:36,200
为了对客户有用，客户需要购买的不仅仅是一个许可证

547
00:43:36,300 --> 00:43:44,425
所以他们也购买咨询服务，因为它还不是一个主导的软件

548
00:43:44,450 --> 00:43:51,500
如果你相信所有者，那么是公司本身提供实施服务

549
00:43:51,600 --> 00:43:56,400
所以Method Park作为一个公司是一个软件供应商

550
00:43:56,475 --> 00:44:01,775
也是一个咨询公司提供软件服务

551
00:44:01,775 --> 00:44:08,000
也恰好是一个培训公司，训练软件上你的用户

552
00:44:08,725 --> 00:44:15,475
只有在像微软Office这样的面向消费者的软件中

553
00:44:15,650 --> 00:44:23,850
你才会发现那些不需要咨询公司来调整和配置产品的用户

554
00:44:23,925 --> 00:44:31,525
一些面向消费者的软件可以被消费者开箱即用

555
00:44:31,925 --> 00:44:38,825
或者你必须做的配置是否是如此之小，以至于你甚至没有注意到它的配置

556
00:44:38,875 --> 00:44:45,700
因为你把像微软Office这样的软件安装到你的机器上

557
00:44:45,800 --> 00:44:48,575
但是，在一个企业中

558
00:44:48,600 --> 00:44:49,250
让我告诉你

559
00:44:49,350 --> 00:44:55,025
微软Office的实现并不像把它放到你的笔记本电脑上那么简单

560
00:44:55,025 --> 00:44:57,250
以及在一个企业中

561
00:44:57,250 --> 00:45:04,475
实现微软Office也几乎总是作为一部分

562
00:45:04,475 --> 00:45:07,025
咨询我们的项目

563
00:45:07,125 --> 00:45:11,750
软件被调整添加到本地目录

564
00:45:11,825 --> 00:45:18,900
活动目录或LDAP，公司的黄页

565
00:45:18,900 --> 00:45:24,625
来管理访问权限，以获得正确的模板

566
00:45:24,975 --> 00:45:29,075
所以这是产品或项目

567
00:45:29,075 --> 00:45:30,375
在这里

568
00:45:30,425 --> 00:45:40,725
如果其中一个学生想去创业，你可以看到这类企业的各种好处

569
00:45:40,800 --> 00:45:47,500
咨询公司的优点是，他们不是资本密集型的

570
00:45:47,500 --> 00:45:50,325
也许只有你自己和几个朋友

571
00:45:50,325 --> 00:45:55,425
所以它们不需要很多钱就可以很容易地启动

572
00:45:55,650 --> 00:45:57,275
当然也有缺点

573
00:45:57,275 --> 00:45:59,650
如果市场不理想

574
00:45:59,650 --> 00:46:02,225
也没有咨询业务

575
00:46:02,225 --> 00:46:05,725
一家咨询公司没有收入来源

576
00:46:05,725 --> 00:46:08,275
所以如果你意志不坚是不会有收入的

577
00:46:08,350 --> 00:46:13,775
而长期的稳定真的取决于你所处的咨询市场

578
00:46:13,875 --> 00:46:21,650
这些市场和劳动力真的非常依赖于

579
00:46:21,650 --> 00:46:27,700
商业周期和经济

580
00:46:27,700 --> 00:46:34,750
所以这里有相当大的波动性，这使得咨询业务缺乏吸引力

581
00:46:34,775 --> 00:46:38,675
可扩展性也是有限的

582
00:46:38,750 --> 00:46:47,250
因为这只和你可以雇佣的高质量的员工的数量密切相关

583
00:46:47,500 --> 00:46:52,775
相比之下，谁把产品带到市场更重要

584
00:46:53,025 --> 00:46:58,275
一旦他们有了产品在市场上，他们有相当稳定的收入

585
00:46:58,325 --> 00:47:02,250
因为很难脱离大多数软件

586
00:47:02,250 --> 00:47:05,625
因为软件有这种倾向

587
00:47:06,175 --> 00:47:14,750
将自己注入生命和使用公司的工作

588
00:47:14,750 --> 00:47:16,525
而且真的很难把它抽离出来

589
00:47:16,525 --> 00:47:22,750
所以主要租户的收入相当稳定，可以定期进行预算和支付

590
00:47:22,750 --> 00:47:28,850
所以，接受这些维护收入的软件供应商都发展得很持久

591
00:47:28,850 --> 00:47:33,400
如果一旦进入市场成功地生存下来

592
00:47:33,400 --> 00:47:36,850
经受住经济的任何低迷等等

593
00:47:37,400 --> 00:47:40,275
这就允许我们的软件供应商使用了

594
00:47:40,275 --> 00:47:45,725
因为这些收入不断地积累起来，不断地增加

595
00:47:45,725 --> 00:47:49,250
随着公司给我们更多的客户

596
00:47:49,250 --> 00:47:54,825
使公司拥有高市值的高股票市场水平

597
00:47:55,025 --> 00:47:59,525
当你看看软件公司的市值时

598
00:47:59,525 --> 00:48:06,675
包括咨询企业和软件供应商

599
00:48:06,675 --> 00:48:11,872
您会看到大多数软件供应商都有一些例外

600
00:48:11,872 --> 00:48:14,550
就像混合的IBM一样，什么都做

601
00:48:14,550 --> 00:48:18,650
但是真正市值最高的软件公司

602
00:48:18,675 --> 00:48:23,075
和市值最高的最高分数的公司

603
00:48:23,125 --> 00:48:27,750
是像甲骨文、微软和SAP这样的公司

604
00:48:27,800 --> 00:48:33,900
和一些咨询公司，如果他们是在交易所交易的话

605
00:48:34,425 --> 00:48:38,925
当然，现在软件公司的问题是很难起步

606
00:48:39,050 --> 00:48:41,875
因为你没有任何东西可以马上卖出去

607
00:48:41,875 --> 00:48:43,250
所以你是正在试图开发一个产品

608
00:48:43,250 --> 00:48:45,300
可能要花很长时间

609
00:48:45,300 --> 00:48:53,075
这个产品才能真正达到最低的要求和最小可行的产品

610
00:48:53,125 --> 00:48:58,700
这样它就可以对客户有用，也可以卖给客户

611
00:48:58,775 --> 00:49:04,725
这意味着软件供应商需要前期投资和风险投资

612
00:49:04,775 --> 00:49:08,475
这可能容易也可能不容易获得

613
00:49:08,475 --> 00:49:09,775
如果这很容易做到

614
00:49:09,775 --> 00:49:14,175
那么这对公司的创始人仍然不一定有益

615
00:49:14,175 --> 00:49:20,425
因为他们现在失去了权益或不得不与投资者分享他们的权益

616
00:49:20,600 --> 00:49:27,375
所以大多数初创公司都是高风险的

617
00:49:27,600 --> 00:49:32,675
所以他们很可能失败，只有少数幸存下来

618
00:49:32,675 --> 00:49:37,750
所以这对创始人来说会有更大的风险

619
00:49:39,350 --> 00:49:46,649
所以这就是软件产品和项目的互补性

620
00:49:46,700 --> 00:49:48,500
现在我们将看看

621
00:49:48,500 --> 00:49:56,425
软件行业是如何基于这些主要成分的软件产品和项目来工作的

622
00:49:56,550 --> 00:49:59,150
所以首先重要的是理解

623
00:49:59,150 --> 00:50:03,225
客户实际上不想购买软件产品

624
00:50:03,225 --> 00:50:05,950
有时他们会购买，但他们实际想要的是

625
00:50:06,000 --> 00:50:12,275
是一个所谓的解决他们的问题或挑战的解决办法

626
00:50:12,625 --> 00:50:14,950
因此理想情况下

627
00:50:14,950 --> 00:50:18,375
他们去联系IBM这样的全面服务提供商

628
00:50:18,375 --> 00:50:21,075
给我们一个数据中心

629
00:50:21,100 --> 00:50:25,425
里面做所有的金融交易处理或者其他

630
00:50:25,625 --> 00:50:29,200
对客户来说，这意味着

631
00:50:29,200 --> 00:50:40,425
他们从一家公司购买最合适的硬件，软件和实施服务

632
00:50:40,425 --> 00:50:45,900
因为如果出错了，他们可以向那家公司投诉抱怨

633
00:50:46,075 --> 00:50:51,950
当然，现在在现实中，那么我的客户必须有效地组织

634
00:50:51,950 --> 00:50:54,625
他们通常已经有了一个数据中心

635
00:50:54,625 --> 00:50:57,800
所以硬件是现有的

636
00:50:57,800 --> 00:50:59,475
但然后他们会简单地想

637
00:50:59,475 --> 00:51:07,208
为该软件购买一包软件和定制服务

638
00:51:07,208 --> 00:51:10,175
他们真的不想解开软件捆绑

639
00:51:10,175 --> 00:51:13,300
将软件作为一个实体

640
00:51:13,425 --> 00:51:19,675
而不是可视化的操作系统和应用程序

641
00:51:19,675 --> 00:51:21,017
但发生的是

642
00:51:21,017 --> 00:51:26,600
客户数据中心的复杂和工作程度

643
00:51:26,600 --> 00:51:31,150
他们自己在数据中心的人员可以操作硬件

644
00:51:31,400 --> 00:51:33,325
可以操作操作系统

645
00:51:33,325 --> 00:51:37,225
所以额外的应用程序可以放在这上面

646
00:51:37,225 --> 00:51:39,250
以确保

647
00:51:39,250 --> 00:51:45,350
数据中心客户只是购买一个应用程序和对应的定制服务

648
00:51:45,525 --> 00:51:47,975
但理想情况下，他们会垂直购买

649
00:51:47,975 --> 00:51:51,350
或者他们会想垂直购买整件东西

650
00:51:51,350 --> 00:51:53,950
还有一个负面的笑话

651
00:51:53,975 --> 00:51:55,300
就是这样

652
00:51:56,450 --> 00:52:05,425
这种垂直购买的情况实际上是六七年代、八十年代的原始情况

653
00:52:05,425 --> 00:52:10,625
在一个软件几乎不作为一个独立的实体存在的时候

654
00:52:10,625 --> 00:52:15,525
让像IBM和D2c这样的公司相互竞争

655
00:52:15,525 --> 00:52:20,825
向客户销售一个垂直集成的解决方案

656
00:52:20,825 --> 00:52:22,425
其中包括

657
00:52:22,425 --> 00:52:28,175
属于特定供应商的专利和知识产权的硬件

658
00:52:28,175 --> 00:52:31,000
一种在硬件上运行的操作系统

659
00:52:31,000 --> 00:52:35,250
它也是特定供应商拥有的操作系统

660
00:52:35,300 --> 00:52:38,475
然后首先是一个应用程序

661
00:52:38,700 --> 00:52:43,400
一个出售给多个客户地标准应用程序

662
00:52:43,400 --> 00:52:48,250
甚至可能是为特定客户开发的自定义应用程序

663
00:52:48,325 --> 00:52:52,575
但所有这些都建立在专有的操作系统和硬件之上

664
00:52:52,575 --> 00:52:59,025
现在我们来讨论这个模型的一些好处

665
00:52:59,025 --> 00:53:00,750
在课堂上进行的讨论

666
00:53:00,825 --> 00:53:04,200
而这些好处是

667
00:53:04,200 --> 00:53:11,500
垂直集成可以确保这些部件真的能够很好地协同工作

668
00:53:11,500 --> 00:53:16,600
除了概念上的分层

669
00:53:16,600 --> 00:53:21,607
这里没有区分操作系统上的硬件和应用程序

670
00:53:21,625 --> 00:53:24,025
这就是我在这里解释

671
00:53:24,025 --> 00:53:30,550
当然他们的脑海中有一个非常棒的软件架构

672
00:53:30,550 --> 00:53:34,600
我们会考虑这里卖什么

673
00:53:34,600 --> 00:53:36,125
但在早期

674
00:53:36,125 --> 00:53:43,494
应用程序操作系统和硬件之间的层和边界

675
00:53:43,494 --> 00:53:49,425
比今天更具渗透性

676
00:53:49,475 --> 00:53:55,050
现在这些好处能带来的优势是提供了一个高效工作和集成的解决方案

677
00:53:55,075 --> 00:54:02,575
而缺点是，一个供应商必须能把所有的工作做得很好

678
00:54:02,600 --> 00:54:08,950
IBM必须做和理解操作系统功能的应用程序需求

679
00:54:08,950 --> 00:54:12,925
以及硬件如何构建适当的端口

680
00:54:13,500 --> 00:54:14,375
以及硬件如何构建适当的端口

681
00:54:14,375 --> 00:54:21,775
更好的方法是水平分层设计

682
00:54:21,775 --> 00:54:27,425
并且让这些层的专业化

683
00:54:27,425 --> 00:54:31,000
所以从80年代和90年代开始

684
00:54:31,000 --> 00:54:40,000
我们看到了分隔这些层的非常明确的边界出现了

685
00:54:40,000 --> 00:54:45,725
所以他们需要成为这些边界的行业协议标准

686
00:54:45,825 --> 00:54:51,075
所以我们建立了硬件体系结构

687
00:54:51,125 --> 00:54:58,250
这意味，它有定义的边界，这来自于操作系统有的一个良好定义的边界，

688
00:54:58,250 --> 00:55:02,300
有时是由业主定义的，但仍然定义得很好

689
00:55:02,300 --> 00:55:06,725
通过应用来使用边界

690
00:55:06,725 --> 00:55:09,375
通过有了这些明确定义的边界

691
00:55:09,425 --> 00:55:15,375
你就会掌握专门从事这些图层的供应商

692
00:55:15,475 --> 00:55:22,375
有时这些层主要被一个特定的供应商占据

693
00:55:22,375 --> 00:55:28,200
就像Windows一样，有很长一段时间是主要的操作系统供应商

694
00:55:28,325 --> 00:55:32,450
到处都只用Windows操作系统

695
00:55:32,450 --> 00:55:39,200
或者IBM是一个强大的供应商，等等

696
00:55:39,300 --> 00:55:46,825
但现在我们看到了这些层的多个实现

697
00:55:46,825 --> 00:55:50,450
所以在一层内有一个竞争

698
00:55:50,450 --> 00:55:57,775
有时也是一个直接集成在堆栈上的竞争

699
00:55:57,775 --> 00:56:00,250
这意味着你有更低的层

700
00:56:00,300 --> 00:56:08,225
使更高层或所谓的高层生态系统成为可能，这些就是所谓的平台

701
00:56:08,325 --> 00:56:11,475
我们之后会再讨论一下

702
00:56:12,050 --> 00:56:14,300
无论怎么重构

703
00:56:14,300 --> 00:56:19,925
垂直集成最终速度太慢，而且不够创新

704
00:56:19,975 --> 00:56:28,650
以及基于明确的标准边界和API的行业的部分或横向的集成

705
00:56:28,650 --> 00:56:30,950
处在这些层之间

706
00:56:31,750 --> 00:56:37,625
迈出一小小步回到这里

707
00:56:37,625 --> 00:56:43,100
这也许更适合我们对软件工程的一般介绍

708
00:56:43,100 --> 00:56:46,675
但这是一个软产业

709
00:56:46,700 --> 00:56:50,000
事实上，它存在的时间并没有软件存在的时间长

710
00:56:50,000 --> 00:56:53,000
这个词在59年被提出

711
00:56:53,075 --> 00:56:58,950
硬件和软件之间的分离实际

712
00:56:58,950 --> 00:57:04,150
是美国司法部在69年采取的一项法律行动

713
00:57:04,150 --> 00:57:09,025
要求供应商干净和清晰地分离

714
00:57:09,025 --> 00:57:14,925
这基本上使以后的水平集成成为可能

715
00:57:15,100 --> 00:57:18,550
但是垂直集成持续了很长一段时间

716
00:57:18,550 --> 00:57:19,675
所以在69年

717
00:57:19,750 --> 00:57:28,750
在软件系统和软件工程的Garmisch会议上被称为软件工程

718
00:57:28,750 --> 00:57:30,900
这个转变很慢

719
00:57:30,900 --> 00:57:36,450
在80年代和90年代从垂直集成切换到水平集成

720
00:57:36,750 --> 00:57:43,775
这导致了基于平台的平台和生态系统的增长

721
00:57:43,775 --> 00:57:45,275
这个稍后讨论一下

722
00:57:45,625 --> 00:57:46,950
在90年代

723
00:57:46,950 --> 00:57:51,175
我们看到Windows几乎完全的主导的地位

724
00:57:51,175 --> 00:57:53,975
让他被打断是的

725
00:57:54,000 --> 00:57:57,950
现在正在慢慢地被Linux所取代吗

726
00:57:57,950 --> 00:57:59,575
我想我已经提到过

727
00:57:59,575 --> 00:58:06,275
如何以安卓和Joseph的形式安装

728
00:58:06,275 --> 00:58:10,050
因此，Linux直到最近才超过了Windows

729
00:58:10,050 --> 00:58:13,425
这是最常用的操作系统

730
00:58:13,525 --> 00:58:18,300
在21世纪初，你有了现代化的更多样化的平台

731
00:58:18,300 --> 00:58:23,725
当然，开源软件的增长作为一个主要现象

732
00:58:23,725 --> 00:58:27,575
产生了平台和生态系统

733
00:58:27,575 --> 00:58:28,750
现在

734
00:58:28,750 --> 00:58:37,000
由于云计算的发展，我们实际上观察到了某种垂直集成

735
00:58:37,000 --> 00:58:41,775
虽然我很确定很快就会回到水平集成

736
00:58:41,800 --> 00:58:45,075
而且它还不是那么强大的垂直集成

737
00:58:45,200 --> 00:58:50,100
所以我现在想谈谈软件平台

738
00:58:50,100 --> 00:58:55,250
软件平台是一种软件产品

739
00:58:55,300 --> 00:59:05,050
通过定义的API，使其它的软件可以使用这个平台的软件

740
00:59:05,050 --> 00:59:09,075
所以我们发展得更快，质量更高

741
00:59:09,075 --> 00:59:15,975
因为该平台提供了应用程序运行所需的所有服务

742
00:59:15,975 --> 00:59:19,000
但是没有特定的平台

743
00:59:19,000 --> 00:59:20,025
所以很明显

744
00:59:20,025 --> 00:59:21,650
最明显的选择是

745
00:59:21,675 --> 00:59:32,186
提供调度过程、消防系统访问等服务的操作系统

746
00:59:32,186 --> 00:59:34,875
每一个应用都需要这些支持

747
00:59:35,125 --> 00:59:40,375
但绝不是特定于应用程序或任何特定的应用程序

748
00:59:40,400 --> 00:59:45,725
可以由应用程序使用平台的API进行编程

749
00:59:47,500 --> 00:59:51,300
Linux是基于POSIX标准建立起来的

750
00:59:51,300 --> 00:59:54,025
所以操作系统有一个标准

751
00:59:54,025 --> 00:59:59,625
Windows有它自己的专有标准，称为win32API

752
00:59:59,625 --> 01:00:10,125
这些是建立在操作系统之上让我们保持独立的方法

753
01:00:10,125 --> 01:00:18,675
这里有趣的方面是，这种关系通常是1到n的

754
01:00:18,850 --> 01:00:22,275
一个平台有n个端

755
01:00:22,375 --> 01:00:30,225
可能在平台上构建大量应用程序

756
01:00:30,425 --> 01:00:33,075
因此，Windows有一个操作系统

757
01:00:33,475 --> 01:00:38,650
可以启用或可以实现大量的应用程序

758
01:00:38,725 --> 01:00:43,800
现在也有可能将一个应用程序移植到另一个不同的平台上

759
01:00:43,800 --> 01:00:47,275
但仍然是像Linux这样的平台的数量

760
01:00:47,275 --> 01:00:53,325
Windows非常小，而应用程序的数量将非常大

761
01:00:53,375 --> 01:00:56,850
所以平台是少数的

762
01:00:56,850 --> 01:00:59,600
这就是为什么让应用程序授权

763
01:00:59,600 --> 01:01:03,975
但是还有大量的应用程序

764
01:01:06,000 --> 01:01:11,125
好吧

765
01:01:11,200 --> 01:01:12,700
所以，一个软件平台

766
01:01:12,775 --> 01:01:17,875
让我今年复现一个开发和部署应用程序的环境

767
01:01:18,025 --> 01:01:21,875
正如他们要求的基于这个软件平台

768
01:01:21,975 --> 01:01:29,150
它提供了应用程序需要的完整的应用程序、独立的生命周期函数

769
01:01:29,150 --> 01:01:34,700
库和实用功能

770
01:01:34,775 --> 01:01:38,275
而这对于在应用程序的实现没有任何意义

771
01:01:38,275 --> 01:01:41,775
因为它们可以跨广泛的应用程序进行可重复使用

772
01:01:41,775 --> 01:01:47,450
因此，应用程序从的以下角度来看平台

773
01:01:47,450 --> 01:01:52,675
我能以多快的速度开发出有用并可以卖给用户的应用程序

774
01:01:52,675 --> 01:01:54,250
在这个特定的平台上

775
01:01:54,250 --> 01:02:00,350
这让我能够实现我想要改进的软件是多么容易啊

776
01:02:00,950 --> 01:02:02,175
因此

777
01:02:02,175 --> 01:02:10,250
像操作系统这样的平台本身对最终客户没有用

778
01:02:10,325 --> 01:02:17,300
只有通过提供额外客户价值的应用程序，平台才会变得有用

779
01:02:17,550 --> 01:02:22,625
因为客户首先管理平台

780
01:02:22,625 --> 01:02:25,825
然后在平台上管理多个应用程序

781
01:02:25,825 --> 01:02:32,750
所以平台最终被出售给应用程序

782
01:02:32,750 --> 01:02:34,800
这是相互迁就的

783
01:02:35,000 --> 01:02:40,075
如果现在还没有什么平台

784
01:02:40,075 --> 01:02:42,375
就必须建造平台

785
01:02:42,375 --> 01:02:43,800
但在早期

786
01:02:43,800 --> 01:02:48,475
它们将通过可用的应用程序来出售

787
01:02:50,000 --> 01:02:55,275
一开始，Microsoft Windows并没有吸引力

788
01:02:55,275 --> 01:02:57,707
除非有Microsoft Office

789
01:02:57,707 --> 01:03:01,925
由于人们想要Microsoft Office，所以才买了Microsoft Windows

790
01:03:02,025 --> 01:03:07,200
因为用户友好的办公软件的成功

791
01:03:07,200 --> 01:03:12,400
更多的应用程序都是依赖平台的

792
01:03:12,400 --> 01:03:14,325
所以那些已经有了Windows 的人

793
01:03:14,325 --> 01:03:20,250
Windows平台的地位不断巩固，最终变得很难离开

794
01:03:20,250 --> 01:03:25,050
因为客户必须放弃所有这些现有的应用程序

795
01:03:25,300 --> 01:03:28,325
最近我们经历了这样一个周期

796
01:03:28,325 --> 01:03:33,300
那就是手机和应用程序商店的崛起

797
01:03:33,300 --> 01:03:38,150
看到手机和操作系统都有一个平台

798
01:03:38,150 --> 01:03:44,725
我们可以看到iPhone和安卓手机是如何争夺

799
01:03:44,725 --> 01:03:49,450
作为移动应用程序主要平台的市场主导地位的

800
01:03:50,575 --> 01:03:55,800
所以平台提供商最初需要提供应用程序

801
01:03:55,800 --> 01:04:00,575
而不需要说服应用程序开发人员在他们的平台上进行开发

802
01:04:00,575 --> 01:04:03,200
但是，一旦到了一个临界点

803
01:04:03,200 --> 01:04:09,075
他们可以从中受益

804
01:04:09,075 --> 01:04:13,350
因为在销售应用程序时

805
01:04:13,350 --> 01:04:15,825
每个应用每售出一次

806
01:04:15,875 --> 01:04:22,925
你将获得平台的授权

807
01:04:22,925 --> 01:04:26,450
所以不论这个应用被销售向何处

808
01:04:26,450 --> 01:04:31,275
平台也必将销售得很快

809
01:04:31,275 --> 01:04:36,275
如果出售应用程序，平台也将被出售

810
01:04:36,800 --> 01:04:38,750
现在

811
01:04:38,750 --> 01:04:42,225
从平台提供商的角度来看

812
01:04:42,225 --> 01:04:47,400
他们需要创建一个所谓的生态系统和软件生态系统

813
01:04:47,575 --> 01:04:51,750
所以这就是参与者、企业和个人的整体

814
01:04:51,925 --> 01:04:56,525
以及他们在我们的销售中开发的软应用程序

815
01:04:56,525 --> 01:05:01,600
以及特定软件平台的关系和目标

816
01:05:01,600 --> 01:05:04,600
现在有了这么多个定义

817
01:05:04,600 --> 01:05:07,375
一个软件生态系统实际上是什么呢

818
01:05:07,375 --> 01:05:09,525
对我来说

819
01:05:09,525 --> 01:05:13,250
是围绕着一个特定软件产生的软件生态系统

820
01:05:13,475 --> 01:05:18,850
否则，我就不清楚如何区从我们和社区中区分它

821
01:05:18,900 --> 01:05:21,200
此外，我认为一个软件生态系统

822
01:05:21,200 --> 01:05:24,775
不仅仅是一个围绕着一个开源软件项目的社区

823
01:05:24,775 --> 01:05:29,625
只有有了软件平台，才可能成为一个生态系统

824
01:05:29,625 --> 01:05:33,412
这使得我对软件平台的概念有点限制

825
01:05:33,425 --> 01:05:39,425
如果这是一个专有的平台，就有一个强大的头部玩家

826
01:05:39,475 --> 01:05:44,325
如果是开源平台，情况就会不同

827
01:05:44,325 --> 01:05:46,775
我们稍后会讨论的这个

828
01:05:47,075 --> 01:05:51,600
所以，如前所述，软件平台就是产品

829
01:05:51,600 --> 01:05:55,025
它们非常有价值，因为应用程序需要它们

830
01:05:55,025 --> 01:05:59,975
所以应用程序提供商总是使用应用程序来销售平台

831
01:05:59,975 --> 01:06:03,675
IT部门也想要它们

832
01:06:03,675 --> 01:06:08,950
因为IT部门需要为内部用户操作软件

833
01:06:08,950 --> 01:06:14,850
所以他们只希望尽可能少的平台被了解到

834
01:06:14,850 --> 01:06:22,025
通常，IT部门只在 Windows或Linux上进行标准化

835
01:06:22,025 --> 01:06:30,825
在这个案例中，不接受任何其他平台操作系统的应用

836
01:06:30,850 --> 01:06:35,393
这就是为什么Linux很难出现到桌面上

837
01:06:35,393 --> 01:06:37,569
因为这是Windows的主导的领域

838
01:06:37,569 --> 01:06:45,600
而IT部门只是不想在除了Windows桌面之外还管理Linux桌面

839
01:06:45,725 --> 01:06:50,500
显然，Linux的服务器空间更加强大

840
01:06:50,525 --> 01:06:55,725
很可能会自然超车，淘汰Windows

841
01:06:55,875 --> 01:06:58,625
所以再一次从战略的角度来看

842
01:06:58,625 --> 01:07:02,725
平台业务是一个需要提升和发展的版块

843
01:07:02,725 --> 01:07:05,875
每个软件公司谁都想成为一个平台

844
01:07:05,875 --> 01:07:09,875
你可以想象一层又一层

845
01:07:09,875 --> 01:07:18,100
例如，Windows是AdobePhop的平台

846
01:07:18,150 --> 01:07:25,850
但是Photoshop也是一个面向小公司为Photoshop提供的各种插件的平台

847
01:07:26,100 --> 01:07:28,975
因此，这里要指出的战略考虑是

848
01:07:28,975 --> 01:07:35,450
每个应用程序许可证的销售也意味着该平台的销售

849
01:07:35,525 --> 01:07:37,975
现在这个平台已经到位了

850
01:07:38,025 --> 01:07:43,000
它可能不会给这个平台供应商带来更多的收入

851
01:07:43,025 --> 01:07:45,425
但它做到了

852
01:07:45,425 --> 01:07:46,625
这取决于

853
01:07:46,625 --> 01:07:51,400
应用程序如何使用平台以及平台的定价模型

854
01:07:51,400 --> 01:07:54,125
例如，如果该平台是数据库

855
01:07:54,125 --> 01:08:00,050
比如或者Oracle，它意味着额外的用户或额外的资源消耗

856
01:08:00,050 --> 01:08:02,775
定价模型也是基于此的

857
01:08:02,775 --> 01:08:08,200
然后，一个额外的应用程序需要对一个额外的平台进行销售

858
01:08:08,475 --> 01:08:15,050
此外，这些平台也推动了潜在的竞争对手

859
01:08:15,050 --> 01:08:20,475
也意味着平台供应商的定价能力非常高

860
01:08:20,475 --> 01:08:24,225
他们可以不断提高价格

861
01:08:24,225 --> 01:08:28,300
直到几乎没有人想购买应用程序或跨越整个平台

862
01:08:28,300 --> 01:08:31,275
所以，这里的定价是一个艺术

863
01:08:31,400 --> 01:08:36,275
如何最大化总收入，而不过多恼怒客户

864
01:08:36,275 --> 01:08:39,525
但你还是要尽可能多地收费

865
01:08:40,575 --> 01:08:41,375
好的

866
01:08:41,375 --> 01:08:42,950
所以基于这些现象

867
01:08:42,950 --> 01:08:50,800
软件产品、软件平台及其生态系统是如何创建我们的商业模式的

868
01:08:50,800 --> 01:08:55,525
商业模式是一种企业的运作方式

869
01:08:55,525 --> 01:09:02,150
它是一个关于业务元素和交互

870
01:09:02,150 --> 01:09:07,100
或关系以及其它元素的的总结描述模型

871
01:09:07,200 --> 01:09:14,600
为了实现具有该商业模式的公司的战略目标

872
01:09:14,600 --> 01:09:21,253
所以这里的元素是产品、业务合作伙伴、员工和人员

873
01:09:21,253 --> 01:09:26,275
职位和其稀缺资源

874
01:09:26,325 --> 01:09:30,550
这些都控制着这些元素如何在一起作用

875
01:09:30,875 --> 01:09:36,600
你有时会听到人们谈论开源的商业模式

876
01:09:36,625 --> 01:09:39,900
严格地说，没有开源的商业模式

877
01:09:39,900 --> 01:09:49,225
但也有一些商业模式以开源作为关键因素

878
01:09:49,225 --> 01:09:56,950
以至于有时这是商业模式的主导地位和核心

879
01:09:56,975 --> 01:10:02,950
以至于人们会称之为某种特定的公司商业模式和开源商业模式

880
01:10:02,950 --> 01:10:05,900
当然，在之后的章节中

881
01:10:05,950 --> 01:10:11,550
我们将识别这些开源商业模式的不同模式

882
01:10:12,500 --> 01:10:17,925
如今，描述商业模型最常见的方法是

883
01:10:17,925 --> 01:10:21,225
商业模型的画布

884
01:10:21,225 --> 01:10:31,675
它只是一种让一个企业的设计师和战略家使用可视化的格式

885
01:10:31,775 --> 01:10:38,225
由一个商业模型的设计者来填写他们不应该忘记的不同组件

886
01:10:38,550 --> 01:10:43,100
这意味着一个公司的关键资源是什么

887
01:10:43,275 --> 01:10:48,450
将这些资源组合起来的关键活动

888
01:10:48,575 --> 01:10:54,325
以创建隐藏在价值主张背后的额外产品

889
01:10:54,525 --> 01:10:55,475
有时

890
01:10:55,475 --> 01:11:02,125
您需要强大的合作伙伴来为客户创建价值主张

891
01:11:02,150 --> 01:11:06,275
然后你如何得到这个价值主张

892
01:11:06,475 --> 01:11:09,800
让它得到客户的认可

893
01:11:09,800 --> 01:11:13,350
并且以一种客户想要购买的方式

894
01:11:13,350 --> 01:11:15,800
所以管理关系是如何的呢？

895
01:11:15,800 --> 01:11:19,675
以及接触到客户的渠道是什么呢？

896
01:11:19,800 --> 01:11:23,625
你需要理解细分的概念

897
01:11:23,625 --> 01:11:31,200
通常两个不同的客户群体，所有的产品是不同的

898
01:11:31,350 --> 01:11:36,575
所有这些东西的背后都是你从客户那里提取的收入流

899
01:11:36,675 --> 01:11:41,575
以及他们如何支付所有不同的成本方面或整体成本结构

900
01:11:41,700 --> 01:11:45,575
成为您提供给客户的价值主张

901
01:11:45,575 --> 01:11:48,925
简而来说，在商业模型的画布上

902
01:11:48,925 --> 01:11:55,350
在未来，我们将使用它来讨论不同的基于开源的商业模式

903
01:11:55,825 --> 01:11:57,475
再次

904
01:11:57,475 --> 01:12:02,875
当我说开源商业模式本身不是商业模

905
01:12:02,875 --> 01:12:06,875
而是商业模式中的开源

906
01:12:06,875 --> 01:12:07,925
我们会看到

907
01:12:07,925 --> 01:12:11,355
一个走向市场的策略如何进入市场

908
01:12:11,375 --> 01:12:15,350
一个创新的模式，如何跟上竞争对手

909
01:12:15,350 --> 01:12:23,825
如何生活得更好、更快、更便宜和许多其他东西的协作模式

910
01:12:24,400 --> 01:12:25,825
好的

911
01:12:25,825 --> 01:12:29,750
在这节课我们介绍了软件产业

912
01:12:29,750 --> 01:12:33,375
我们回顾了什么是一个软件产品

913
01:12:33,475 --> 01:12:39,100
区分核心基本产品和整体产品以及不同方面

914
01:12:39,225 --> 01:12:42,750
以及如何给它们定价

915
01:12:42,750 --> 01:12:44,425
我们展示了

916
01:12:44,425 --> 01:12:50,500
如果没有实施它们的项目，企业不可能有严格的产品

917
01:12:50,500 --> 01:12:54,600
这样你需要一个咨询公司的生态系统

918
01:12:54,675 --> 01:12:58,175
或者需要作为一个软件供应商提供咨询

919
01:12:58,175 --> 01:13:01,750
讲述了平台的崛起

920
01:13:01,875 --> 01:13:07,925
以及针对软件产品或软件平台的软件生态系统

921
01:13:07,925 --> 01:13:11,575
然后，我们解释了商业模式的核心要素

922
01:13:11,575 --> 01:13:14,650
这对开源意味着什么

923
01:13:14,650 --> 01:13:20,325
这正是我们将在即将到来下一课时中要学到的

924
01:13:20,325 --> 01:13:26,325
——关于开源软件的不同类型的商业模式

925
01:13:26,325 --> 01:13:30,425
这就是我的课程，非常感谢你的关注

926
01:13:30,425 --> 01:13:34,725
下一节再见

